{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## SAMPLE MEAN, MODE AND STANDARD DEVIATION\n",
    "\n",
    "Develop a program that calculates sample mean, mode and standard deviation based in a set of data introduced by the user.\n",
    "MuÃ±oz Real Diego Antonio y Cardenas Tovar Jovan Fernando 3-A"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "intoduce the numbers of data:  5\n",
      "intoduce the data: \n",
      "4\n",
      "4\n",
      "8\n",
      "7\n",
      "9\n",
      "1 for sample mean\n",
      "2 for mode\n",
      "3 for standard deviation\n",
      "which operation do you want to show?: 1\n",
      "0.8\n",
      "0.96\n",
      "1.7920000000000003\n",
      "1.7584\n",
      "2.15168\n"
     ]
    }
   ],
   "source": [
    "terms_x=int(input(\"intoduce the numbers of data:  \"))\n",
    "data_x=[]\n",
    "mean=0\n",
    "sd=0\n",
    "a=0\n",
    "b=a\n",
    "\n",
    "print (\"intoduce the data: \")\n",
    "for i in range(0, terms_x):\n",
    "    new_x=int(input())\n",
    "    data_x.append(new_x)\n",
    "print('''1 for sample mean\n",
    "2 for mode\n",
    "3 for standard deviation''')\n",
    "op=int(input(\"which operation do you want to show?: \"))\n",
    "if op==1:\n",
    "    for e in range (0, terms_x):\n",
    "        mean+=data_x[e]\n",
    "        mean=mean/terms_x\n",
    "        print(mean)\n",
    "if op==2:\n",
    "    for o in data_x:\n",
    "        a=data_x.count(o)\n",
    "        if a>b:\n",
    "            b=a\n",
    "    modes=[]\n",
    "    for o in data_x:\n",
    "        a=data_x.count(o)\n",
    "        if a==b and o not in modes:\n",
    "                modes.append(o)\n",
    "    print(modes)\n",
    "if op==3:\n",
    "    for e in range (0, terms_x):\n",
    "        mean+=data_x[s]\n",
    "    mean=mean/terms_x\n",
    "    for r in range(0, terms_x):\n",
    "        sd+=(data_x[r]-mean)**2\n",
    "    sd=(sd/(terms_x-1))**(1/2)\n",
    "    print(sd)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
